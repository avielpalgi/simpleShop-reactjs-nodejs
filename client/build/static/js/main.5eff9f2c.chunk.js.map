{"version":3,"sources":["components/Footer.js","constants/userConstants.js","constants/orderConstants.js","constants/cartConstants.js","actions/userAction.js","components/SearchBox.js","components/Header.js","components/Rating.js","components/Product.js","constants/productConstants.js","actions/productAction.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartAction.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","GET_ORDERS_REQUEST","GET_ORDERS_SUCCESS","GET_ORDERS_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_RESET","getUserDetails","id","dispatch","getState","a","type","constants","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","placeholder","name","onChange","target","value","Button","variant","Header","useDispatch","useSelector","state","Navbar","bg","expand","collapseOnSelect","to","Brand","render","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Rating","text","color","style","defaultProps","prototype","PropTypes","number","isRequired","string","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_GET_TOP_REQUEST","PRODUCT_GET_TOP_SUCCESS","PRODUCT_GET_TOP_FAIL","PRODUCT_GET_TOP_RESET","listProducts","pageNumber","listProductDetails","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","pages","page","Pagination","Array","keys","map","x","active","ProductCarousel","getTopProducts","errorTop","loading","error","productsTop","products","useEffect","Carousel","pause","wrap","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","productList","params","sm","md","lg","xl","ProductScreen","Quantity","setQuantity","setRating","comment","setComment","productDetails","createReview","errorCreateReview","successCreateReview","success","alert","ListGroup","countInStock","disabled","reviews","length","review","createdAt","substring","post","Group","controlId","Label","row","addToCart","qty","setItem","JSON","stringify","cart","cartItems","CartScreen","location","productId","search","Number","split","console","log","removeFromCartHander","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","userDetails","user","userProfileUpdate","orderListMy","orders","errorOrders","loadingOrders","put","UpdateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","DeliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","successPay","loadingPay","errorPay","orderDeliver","successDeliver","loadingDeliver","errorDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","deliverHandler","deliverOrder","href","deliveredAt","amount","onSuccess","paymentResult","payOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHander","confirm","delete","deleteUser","UserEditScreen","userId","setisAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setDescription","setBrand","setCategory","setCountInStock","setImage","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","getOrders","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5eff9f2c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Container,Row,Col} from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; aviel palgi\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\n\r\n","export const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST'\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS'\r\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const GET_ORDERS_REQUEST = 'GET_ORDERS_REQUEST'\r\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS'\r\nexport const GET_ORDERS_FAIL = 'GET_ORDERS_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_RESET = 'CART_RESET'","import axios from 'axios'\r\nimport  * as constants from '../constants/userConstants'\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\nimport {CART_RESET} from '../constants/cartConstants'\r\n\r\nexport const login = (email,password)=>async(dispatch)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users/login',{ email,password }, config)\r\n        dispatch({\r\n            type:constants.USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: constants.USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:constants.USER_LOGOUT})\r\n    dispatch({type:constants.USER_DETAILS_RESET})\r\n    dispatch({type:ORDER_LIST_MY_RESET})\r\n    dispatch({type:constants.USER_LIST_RESET})\r\n    dispatch({type:CART_RESET})\r\n}\r\n\r\n\r\nexport const register = (name,email,password)=>async(dispatch)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users',{ name,email,password }, config)\r\n        dispatch({\r\n            type:constants.USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type:constants.USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: constants.USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users/profile/profile`,config)\r\n        dispatch({\r\n            type:constants.USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\n    \r\nexport const UpdateUserProfile = (user) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n    \r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/profile`,user,config)\r\n        dispatch({\r\n            type:constants.USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:constants.USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\n    \r\nexport const listUsers = () => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.USER_LIST_REQUEST\r\n        })\r\n\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users`,config)\r\n        dispatch({\r\n            type:constants.USER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n      \r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\n    \r\nexport const deleteUser = (id) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.delete(`/api/users/${id}`,config)\r\n        dispatch({\r\n            type:constants.USER_DELETE_SUCCESS\r\n        })\r\n      \r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\n      \r\nexport const updateUser = (user) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/${user._id}`,user,config)\r\n        dispatch({\r\n            type:constants.USER_UPDATE_SUCCESS\r\n        })\r\n        dispatch({\r\n            type:constants.USER_DETAILS_SUCCESS,payload:data\r\n        })\r\n      \r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }","import React,{useState} from 'react'\r\nimport {Form,Button} from 'react-bootstrap'\r\nconst SearchBox = ({history}) => {\r\n    const [keyword, setKeyword] = useState('')\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        }\r\n        else{\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n        <Form.Control className='mr-sm-2 ml-sm-5' placeholder='Search Products...' name='q' onChange={(e)=>{setKeyword(e.target.value)}}>\r\n            </Form.Control> \r\n            <Button type='submit' variant='outline-success' className='p-2'>Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {logout} from '../actions/userAction'\r\nimport SearchBox from './SearchBox'\r\n\r\nconst Header = () => {\r\nconst dispatch = useDispatch();\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo  } = userLogin\r\n  const logoutHandler = ()=>{\r\n    dispatch(logout())\r\n  }\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>AvielShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Route render={({history})=><SearchBox history={history}/>}/>\r\n\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n              <NavDropdown title={userInfo.name} id='nav-dropdown'>\r\n                <LinkContainer to='/profile'>\r\n                  <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n              </NavDropdown>\r\n              ) : \r\n              (<LinkContainer to='/login'>\r\n              <Nav.Link>\r\n                <i className='fas fa-user'></i>Sign In\r\n              </Nav.Link>\r\n            </LinkContainer>)\r\n              }\r\n              {userInfo && userInfo.isAdmin &&(\r\n                  <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value>=1 \r\n                    ? 'fas fa-star'\r\n                    : value>=0.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }>\r\n\r\n                    </i>\r\n            </span>\r\n            <span>\r\n            <i style={{color}}\r\n                className={\r\n                    value>=2 \r\n                    ? 'fas fa-star'\r\n                    : value>=1.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }>\r\n                        \r\n                    </i>\r\n            </span>\r\n            <span>\r\n            <i style={{color}}\r\n                className={\r\n                    value>=3 \r\n                    ? 'fas fa-star'\r\n                    : value>=2.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }>\r\n                        \r\n                    </i>\r\n            </span>\r\n            <span>\r\n            <i style={{color}}\r\n                className={\r\n                    value>=4 \r\n                    ? 'fas fa-star'\r\n                    : value>=3.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }>\r\n                        \r\n                    </i>\r\n            </span>\r\n            <span>\r\n            <i style={{color}}\r\n                className={\r\n                    value>=5 \r\n                    ? 'fas fa-star'\r\n                    : value>=4.5 \r\n                    ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                    }>\r\n                        \r\n                    </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color:'#f8e825',\r\n}\r\n\r\nRating.prototype = {\r\n    value: PropTypes.number.isRequired,\r\n    text:PropTypes.string.isRequired,\r\n    color:PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport {Card} from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded h-100'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top'/>\r\n            </Link>\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title as='div'><strong>{product.name}</strong>\r\n                   \r\n                </Card.Title>\r\n            </Link>\r\n            <Card.Text as='div'>\r\n                <Rating  value={product.rating} text={`${product.numReviews} reviews`}/>\r\n            </Card.Text>\r\n            <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_GET_TOP_REQUEST = 'PRODUCT_GET_TOP_REQUEST'\r\nexport const PRODUCT_GET_TOP_SUCCESS = 'PRODUCT_GET_TOP_SUCCESS'\r\nexport const PRODUCT_GET_TOP_FAIL = 'PRODUCT_GET_TOP_FAIL'\r\nexport const PRODUCT_GET_TOP_RESET = 'PRODUCT_GET_TOP_RESET'\r\n\r\n","import axios from 'axios'\r\nimport  * as constants from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '',pageNumber = '') => async(dispatch)=>{\r\ntry {\r\n    dispatch({type:constants.PRODUCT_LIST_REQUEST})\r\n    const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n    dispatch({\r\n        type:constants.PRODUCT_LIST_SUCCESS,\r\n        payload:data\r\n    })\r\n} catch (error) {\r\n    dispatch({\r\n        type:constants.PRODUCT_LIST_FAIL,\r\n        payload: error.response && error.response.data.message \r\n        ? error.response.data.message \r\n        : error.message\r\n    })\r\n}\r\n}\r\n\r\nexport const listProductDetails = (id) => async(dispatch)=>{\r\n    try {\r\n        dispatch({type:constants.PRODUCT_DETAILS_REQUEST})\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type:constants.PRODUCT_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\nexport const deleteProduct = (id) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({type:constants.PRODUCT_DELETE_REQUEST})\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.delete(`/api/products/${id}`,config)\r\n\r\n        dispatch({\r\n            type:constants.PRODUCT_DELETE_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\nexport const createProduct = () => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({type:constants.PRODUCT_CREATE_REQUEST})\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/products`,{},config)\r\n\r\n        dispatch({\r\n            type:constants.PRODUCT_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\nexport const updateProduct = (product) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({type:constants.PRODUCT_UPDATE_REQUEST})\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/products/${product._id}`,product,config)\r\n\r\n        dispatch({\r\n            type:constants.PRODUCT_UPDATE_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n \r\nexport const createProductReview = (id, review) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({type:constants.PRODUCT_CREATE_REVIEW_REQUEST})\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.post(`/api/products/${id}/reviews`,review,config)\r\n\r\n        dispatch({\r\n            type:constants.PRODUCT_CREATE_REVIEW_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\n    \r\nexport const getTopProductsAction = () => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({type:constants.PRODUCT_GET_TOP_REQUEST})\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/products/top/top`,config)\r\n\r\n        dispatch({\r\n            type:constants.PRODUCT_GET_TOP_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.PRODUCT_GET_TOP_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\n","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{width:'100px',height:'100px', margin:'auto',display:'block'}}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer key={x + 1} to={!isAdmin ? keyword? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`:`/admin/productlist/${x+1}`}><Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item></LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getTopProductsAction } from '../actions/productAction'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n  const getTopProducts = useSelector((state) => state.getTopProducts)\r\n  const {\r\n    loading: loadingTop,\r\n    error: errorTop,\r\n    products: productsTop,\r\n  } = getTopProducts\r\n\r\n  useEffect(() => {\r\n    dispatch(getTopProductsAction())\r\n  }, [dispatch])\r\n  return errorTop ? (\r\n    <Message variant='danger'>{errorTop}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' wrap={false} className='bg-dark'>\r\n      {productsTop && productsTop.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid className='' />\r\n            <Carousel.Caption className='carousel=caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport {Helmet} from 'react-helmet'\r\nconst Meta = ({title,description,keywords}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description}/>\r\n            <meta name='keyword' content={keywords}/>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title:'Welcome To AvielShop',\r\n    keywords:'electronic, buy electronics, cheap electronics',\r\n    description:'We sell the best products for cheap'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productAction'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport {Link} from 'react-router-dom'\r\nconst HomeScreen = ({ match }) => {\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products,pages,page } = productList\r\n  const keyword = match.params.keyword\r\n  const pageNumber = match.params.pageNumber\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n   <Meta />\r\n    {!keyword ? <ProductCarousel/>:<Link to='/' className='btn btn-light '>Go Back</Link>}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col className='p-2' key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from '../components/Rating'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [Quantity, setQuantity] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const createReview = useSelector((state) => state.createReview)\r\n  const {\r\n    loading: loadingCreateReview,\r\n    error: errorCreateReview,\r\n    success: successCreateReview,\r\n  } = createReview\r\n  useEffect(() => {\r\n    if (successCreateReview) {\r\n      alert('Review Submitted')\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n    }\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match,successCreateReview])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${Quantity}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id,{rating,comment}))\r\n  }\r\n  return (\r\n    <>\r\n    {product && <Meta title={product.name}/>}\r\n      <Link className='btn btn-dark my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col className='product-page-section' md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col className='product-page-section' md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: ${product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3} className='product-page-section'>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col className='product-page-section'>Price:</Col>\r\n                      <Col className='product-page-section'>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col className='product-page-section'>Status:</Col>\r\n                      <Col className='product-page-section'>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col className='product-page-section'>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            className='selectForm'\r\n                            as='select'\r\n                            value={Quantity}\r\n                            onChange={(e) => setQuantity(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>REVIEWS</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews &&\r\n                  product.reviews.map((review) => (\r\n                    <ListGroup.Item key={review._id}>\r\n                      <strong>{review.name}</strong>\r\n                      <Rating value={review.rating} />\r\n                      <p>{review.createdAt.substring(0, 10)}</p>\r\n                      <p>{review.comment}</p>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorCreateReview && <Message variant='danger'>{errorCreateReview}</Message>}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => {\r\n                            setRating(e.target.value)\r\n                          }}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control as='textarea' row='3' onChange={(e)=>{setComment(e.target.value)}}></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>Submit</Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>Sign In</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id,qty)=>async(dispatch,getState)=>{\r\nconst { data } = await axios.get(`/api/products/${id}`)\r\n\r\ndispatch({\r\n    type:CART_ADD_ITEM,\r\n    payload:{\r\n        product:data._id,\r\n        name:data.name,\r\n        image:data.image,\r\n        price:data.price,\r\n        countInStock:data.countInStock,\r\n        qty\r\n        }\r\n})\r\n\r\nlocalStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart=(id)=>(dispatch,getState)=>{\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id\r\n    })\r\n\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress=(data)=>(dispatch)=>{\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n\r\n}\r\n\r\n\r\n\r\nexport const savePaymentMethod=(data)=>(dispatch)=>{\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport { addToCart,removeFromCart } from '../actions/cartAction'\r\nimport Meta from '../components/Meta'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n  useEffect(() => {\r\n    console.log(cartItems)\r\n  }, [])\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  console.log(qty)\r\n  const removeFromCartHander = (id) => {\r\n      dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n  return (\r\n    <>\r\n    <Meta title='Cart'/>\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='falsh'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.productId}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      className='selectForm'\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='ligh'\r\n                      onClick={() => removeFromCartHander(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { login } from '../actions/userAction'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userAction'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst RegisterScreen = ({location,history}) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const redirect = location.search ? location.search.split('=')[1] :'/'\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading,error,userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n      if (userInfo) {\r\n          history.push(redirect)\r\n      }\r\n    }, [history,userInfo,redirect])\r\n    \r\nconst submitHandler = (e)=>{\r\ne.preventDefault()\r\nif (password !== confirmPassword) {\r\n    setMessage('Passwords do not match')\r\n}\r\nelse{\r\n    dispatch(register(name,email,password))\r\n}\r\n}\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n      <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>Register</Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n            <Col>\r\n            Have an Account? <Link to={redirect ? `/login?redirect=${redirect}`:'/login'}>Login</Link>\r\n            </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, UpdateUserProfile } from '../actions/userAction'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderAction'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nconst ProfileScreen = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdate = useSelector((state) => state.userProfileUpdate)\r\n  const { success } = userUpdate\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { orders, error: errorOrders, loading: loadingOrders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(UpdateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n              </thead>\r\n              <tbody>\r\n                {orders &&\r\n                  orders.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td>{order._id}</td>\r\n                      <td>{order.createdAt.substring(0, 10)}</td>\r\n                      <td>{order.totalPrice}</td>\r\n                      <td>\r\n                        {order.isPaid ? (\r\n                          order.paidAt.substring(0, 10)\r\n                        ) : (\r\n                          <i\r\n                            className='fas fa-times'\r\n                            style={{ color: 'red' }}\r\n                          ></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {order.isDelivered ? (\r\n                          order.DeliveredAt.substring(0, 10)\r\n                        ) : (\r\n                          <i\r\n                            className='fas fa-times'\r\n                            style={{ color: 'red' }}\r\n                          ></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button className='btn-sm' variant='light'>\r\n                            Details\r\n                          </Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import * as constants from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.CREATE_ORDER_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/orders`,order,config)\r\n        dispatch({\r\n            type:constants.CREATE_ORDER_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.CREATE_ORDER_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\n    \r\nexport const getOrderDetails = (id) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n        dispatch({\r\n            type:constants.ORDER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\nexport const payOrder = (orderId, paymentResult) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult, config)\r\n        dispatch({\r\n            type:constants.ORDER_PAY_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\nexport const listMyOrders = () => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n        dispatch({\r\n            type:constants.ORDER_LIST_MY_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\nexport const getAllOrders = () => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.GET_ORDERS_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/`, config)\r\n        dispatch({\r\n            type:constants.GET_ORDERS_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.GET_ORDERS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }\r\n\r\nexport const deliverOrder = (orderId) => async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type:constants.ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { userLogin:{userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/deliver`,{}, config)\r\n        dispatch({\r\n            type:constants.ORDER_DELIVER_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:constants.ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n    }","import React from 'react'\r\nimport {Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nconst CheckoutSteps = ({step1,step2,step3,step4}) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            {step1 ? (\r\n                <LinkContainer to='/login'>\r\n                    <Nav.Link>Sign In</Nav.Link>\r\n                </LinkContainer>\r\n            ): <Nav.Link disabled>Sign in</Nav.Link>}\r\n              {step2 ? (\r\n                <LinkContainer to='/shipping'>\r\n                    <Nav.Link>Shipping</Nav.Link>\r\n                </LinkContainer>\r\n            ): <Nav.Link disabled>Shipping</Nav.Link>}\r\n              {step3 ? (\r\n                <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                </LinkContainer>\r\n            ): <Nav.Link disabled>Payment</Nav.Link>}\r\n              {step4 ? (\r\n                <LinkContainer to='/placeorder'>\r\n                    <Nav.Link>Place Order</Nav.Link>\r\n                </LinkContainer>\r\n            ): <Nav.Link disabled>Place Order</Nav.Link>}\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {saveShippingAddress} from '../actions/cartAction'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nconst ShippingScreen = ({history}) => {\r\nconst dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({address,city,postalCode,country}))\r\n    history.push('/payment')\r\n}\r\n  return (\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n        <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter City'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal Code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>Continue</Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { savePaymentMethod } from '../actions/cartAction'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { createOrder } from '../actions/orderAction'\r\nconst PlaceOrderScreen = ({history}) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  \r\n  const dispatch = useDispatch()\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.17 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector(state => state.orderCreate)\r\n  const { success, error, order } = orderCreate\r\n\r\n  useEffect(() => {\r\n  if (success) {\r\n    history.push(`/order/${order._id}`)\r\n    // eslint-disable-next-line\r\n  }\r\n  }, [history,success])\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summery</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderAction'\r\nimport axios from 'axios'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\nconst OrderScreen = ({ match,history }) => {\r\n  const orderId = match.params.id\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  // const addDecimals = (num) => {\r\n  //   return (Math.round(num * 100) / 100).toFixed(2)\r\n  // }\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { error: userError, loading: loadingError, userInfo } = userLogin\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { error, loading, order } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { success: successPay, loading: loadingPay, error: errorPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const {\r\n    success: successDeliver,\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n  } = orderDeliver\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (successPay || !order || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver,userInfo])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(orderId))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered at {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <p>\r\n                <h2>Payment Method</h2>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid On {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summery</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {errorPay && <Message variant='danger'>{errorPay}</Message>}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {errorDeliver && (\r\n                <Message variant='danger'>{errorDeliver}</Message>\r\n              )}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={() => {\r\n                        deliverHandler()\r\n                      }}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { listUsers, deleteUser } from '../actions/userAction'\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history,successDelete,userInfo])\r\n\r\n  const deleteHander = (id) => {\r\n      if (window.confirm('Are you sure')) {\r\n        dispatch(deleteUser(id))\r\n      }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users &&\r\n              users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </td>\r\n                  <td>\r\n                    {user.isAdmin ? (\r\n                      <i\r\n                        className='fas fa-check'\r\n                        style={{ color: 'green' }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={()=>{deleteHander(user._id)}}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUser } from '../actions/userAction'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {USER_UPDATE_RESET} from '../constants/userConstants'\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n  const [email, setEmail] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [isAdmin, setisAdmin] = useState(false)\r\n  const [message, setMessage] = useState(null)\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  \r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = userUpdate\r\n\r\n\r\n  useEffect(() => {\r\n      if (successUpdate) {\r\n          dispatch({type:USER_UPDATE_RESET})\r\n          history.push('/admin/userlist')\r\n      }\r\n      else{\r\n        if (!user || !user.name || user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n          } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setisAdmin(user.isAdmin)\r\n          }\r\n      }\r\n   \r\n  }, [user,userId,history, successUpdate,dispatch])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({_id:userId, name, email, isAdmin }))\r\n  }\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n{loadingUpdate && <Loader />}\r\n{errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setisAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Button,Row,Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nimport {PRODUCT_CREATE_RESET} from '../constants/productConstants'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { listProducts,deleteProduct,createProduct } from '../actions/productAction'\r\nimport Paginate from '../components/Paginate'\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products,pages,page } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const { loading:loadingDelete, error:errorDelete, success:successDelete } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const { loading:loadingCreate, error:errorCreate, success:successCreate,product:createdProduct } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n      dispatch({type:PRODUCT_CREATE_RESET})\r\n\r\n    if (!userInfo.isAdmin) {\r\n        history.push('/login')\r\n    }\r\n    if (successCreate) {\r\n        history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    }\r\n    else{\r\n        dispatch(listProducts('',pageNumber))\r\n    }\r\n  }, [dispatch, history, userInfo,successDelete,successCreate,createdProduct,pageNumber])\r\n\r\n  const deleteHander = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n  const createProductHandler = () =>{\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Row className='align-items-center'>\r\n        <Col>\r\n        <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n            <Button className='my-3' onClick={()=>{createProductHandler()}}><i className='fas fa-plus'></i> Create Product</Button>\r\n        </Col>\r\n    </Row>\r\n    {loadingDelete && <Loader/>}\r\n    {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n    {loadingCreate && <Loader/>}\r\n    {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>CATEGORY</th>\r\n              <th>BRAND</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products &&\r\n              products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => {\r\n                        deleteHander(product._id)\r\n                      }}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n        <Paginate pages={pages} page={page} isAdmin={true}/>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport axios from 'axios'\r\nimport {listProductDetails,updateProduct} from '../actions/productAction'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {PRODUCT_UPDATE_RESET} from '../constants/productConstants'\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n  const [message, setMessage] = useState(null)\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = productUpdate\r\n\r\n  useEffect(() => {\r\n      if (successUpdate) {\r\n          dispatch({type:PRODUCT_UPDATE_RESET})\r\n          history.push('/admin/productlist')\r\n      }\r\n      else{\r\n        if (!product || !product.name || product._id !== productId) {\r\n            dispatch(listProductDetails(productId))\r\n        }\r\n        else{\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setDescription(product.description)\r\n            setCountInStock(product.countInStock)\r\n            setCategory(product.category)\r\n            setBrand(product.brand)\r\n        }\r\n      }\r\n  \r\n  }, [productId,history,product,dispatch,successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateProduct({_id:productId,name,price,image,description,countInStock,category,brand}))\r\n  }\r\n\r\n  const uploadFileHandler = async(e)=>{\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image',file)\r\n    console.log(formData);\r\n    console.log(file);\r\n    setUploading(true)\r\n\r\n    try {\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/uploads',formData,config)\r\n        setImage(data)\r\n        setUploading(false)\r\n    } catch (error) {\r\n        console.error(error)\r\n        setUploading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader/>}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>PRICE</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter Price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>IMAGE</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler}/>\r\n              {uploading && <Loader/>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>DESCRIPTION</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>CATEGORY</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>BRAND</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countinstock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter Count In Stock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n            </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {getAllOrders } from '../actions/orderAction'\r\nconst OrderListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const getOrders = useSelector(state => state.getOrders)\r\n  const { loading:loadingOrders,error:errorOrders,orders } = getOrders\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n\r\n    if (userInfo && userInfo.isAdmin) {\r\n        dispatch(getAllOrders())\r\n    }\r\n    else{\r\n        history.push('/login')\r\n\r\n    }\r\n   \r\n  }, [dispatch, history, userInfo])\r\n\r\n\r\n  return (\r\n    <>\r\n    <h1>Orders</h1>\r\n      {loadingOrders ? (\r\n        <Loader />\r\n      ) : errorOrders ? (\r\n        <Message variant='danger'>{errorOrders}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders &&\r\n              orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.user && order.user.name}</td>\r\n                  <td>{order.createdAt.substring(0,10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>{order.isPaid ? order.paidAt.substring(0,10) : <i className='fas fa-times' style={{color:'red'}}></i>}</td>\r\n                  <td>{order.isDelivered ? order.deliveredAt.substring(0,10) : <i className='fas fa-times' style={{color:'red'}}></i>}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                       Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  \r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport HomeScreen from './screens/HomeScreen'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/admin/orderlist' component={OrderListScreen}/>\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen}/>\n          <Route path='/admin/productlist' component={ProductListScreen} exact/>\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/serach/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword' component={HomeScreen} exact/>\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer,productCreateReducer, productDetailsReducer,productDeleteReducer,productUpdateReducer,productCreateReviewReducer,getTopProductsReducer} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport { userLoginReducer,userDeleteReducer, userListReducer, userRegisterReducer,userDetailsReducer,userUpdateProfileReducer,userUpdateReducer } from './reducers/userReducers'\r\nimport {orderCreateReducer,orderDetailsReducer,orderPayReducer,orderListMyReducer,getOrdersReducer,orderDeliverReducer} from './reducers/orderReducers'\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    productDelete:productDeleteReducer,\r\n    productCreate:productCreateReducer,\r\n    productUpdate:productUpdateReducer,\r\n    createReview:productCreateReviewReducer,\r\n    getTopProducts:getTopProductsReducer,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userProfileUpdate:userUpdateProfileReducer,\r\n    userUpdate:userUpdateReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderDeliver:orderDeliverReducer,\r\n    orderListMy:orderListMyReducer,\r\n    getOrders:getOrdersReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart:{ cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},\r\n    userLogin:{userInfo:userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import  * as constants  from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case constants.PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload.products,pages:action.payload.pages,page:action.payload.page }\r\n    case constants.PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews:[]} }, action) => {\r\n    switch (action.type) {\r\n      case constants.PRODUCT_DETAILS_REQUEST:\r\n        return { loading: true, ...state }\r\n      case constants.PRODUCT_DETAILS_SUCCESS:\r\n        return { loading: false, product: action.payload }\r\n      case constants.PRODUCT_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_DELETE_REQUEST:\r\n      return { loading: true}\r\n    case constants.PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false,success:true}\r\n    case constants.PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_CREATE_REQUEST:\r\n      return { loading: true}\r\n    case constants.PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false,success:true,product:action.payload}\r\n    case constants.PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n      case constants.PRODUCT_CREATE_RESET:\r\n        return {}\r\n  \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = {product:{}}, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true}\r\n    case constants.PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false,success:true,product:action.payload}\r\n    case constants.PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n      case constants.PRODUCT_UPDATE_RESET:\r\n        return {product:{}}\r\n  \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReviewReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true}\r\n    case constants.PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false,success:true}\r\n    case constants.PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n      case constants.PRODUCT_CREATE_REVIEW_RESET:\r\n        return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const getTopProductsReducer = (state = {products:[]}, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_GET_TOP_REQUEST:\r\n      return { loading: true}\r\n    case constants.PRODUCT_GET_TOP_SUCCESS:\r\n      return { loading: false,products:action.payload}\r\n    case constants.PRODUCT_GET_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n      case constants.PRODUCT_GET_TOP_RESET:\r\n        return {products:[]}\r\n     \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD,CART_RESET} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state={cartItems:[],shippingAddress:{}},action) =>{\r\nswitch (action.type) {\r\n    case CART_ADD_ITEM:\r\n        const item = action.payload\r\n        const existItem = state.cartItems.find(x=>x.product === item.product)\r\n        if (existItem) {\r\n            return {\r\n                ...state,\r\n                cartItems:state.cartItems.map(x=>x.product === existItem.product ? item : x)\r\n            }\r\n        }else{\r\n            return {\r\n                ...state,\r\n                cartItems:[...state.cartItems,item]\r\n            }\r\n        }\r\n        case CART_REMOVE_ITEM:\r\n            return {...state,\r\n                cartItems: state.cartItems.filter((x)=>x.product !== action.payload)\r\n            }\r\n\r\n            case CART_SAVE_SHIPPING_ADDRESS:\r\n                return {...state,\r\n                   shippingAddress: action.payload\r\n                }\r\n                case CART_SAVE_PAYMENT_METHOD:\r\n                    return {...state,\r\n                       paymentMethod: action.payload\r\n                    }\r\n                    case CART_RESET:\r\n                        return {cartItems:[],shippingAddress:{}}\r\n    default:\r\n        return state\r\n}\r\n}","import * as constants from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case constants.USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case constants.USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case constants.USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case constants.USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case constants.USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case constants.USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_DETAILS_REQUEST:\r\n      return { loading: true }\r\n    case constants.USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case constants.USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case constants.USER_DETAILS_RESET:\r\n      return { user: {} }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case constants.USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case constants.USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case constants.USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case constants.USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case constants.USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case constants.USER_LIST_RESET:\r\n      return { user: [] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case constants.USER_UPDATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case constants.USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case constants.USER_UPDATE_RESET:\r\n      return { user: {} }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case constants.USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case constants.USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as constants from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state={},action)=>{\r\n    switch (action.type) {\r\n        case constants.CREATE_ORDER_REQUEST:\r\n            \r\n            return{loading:true}\r\n            case constants.CREATE_ORDER_SUCCESS:\r\n                return{\r\n                    loading:false,\r\n                    success:true,\r\n                    order:action.payload\r\n                }\r\n                case constants.CREATE_ORDER_FAIL:\r\n                    return{\r\n                        loading:false,\r\n                        error:action.payload\r\n                    }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state={loading:true, orderItems:[], shippingAddress:{} },action)=>{\r\n    switch (action.type) {\r\n        case constants.ORDER_DETAILS_REQUEST:\r\n            return{loading:true}\r\n            \r\n            case constants.ORDER_DETAILS_SUCCESS:\r\n                return{\r\n                    loading:false,\r\n                    order:action.payload\r\n                }\r\n                case constants.ORDER_DETAILS_FAIL:\r\n                    return{\r\n                        loading:false,\r\n                        error:action.payload\r\n                    }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state={},action)=>{\r\n    switch (action.type) {\r\n        case constants.ORDER_PAY_REQUEST:\r\n            return{loading:true}\r\n            \r\n            case constants.ORDER_PAY_SUCCESS:\r\n                return{\r\n                    loading:false,\r\n                    success:true\r\n                }\r\n                case constants.ORDER_PAY_FAIL:\r\n                    return{\r\n                        loading:false,\r\n                        error:action.payload\r\n                    }\r\n                    case constants.ORDER_PAY_RESET:\r\n                        return{}      \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state={orders:[]},action)=>{\r\n    switch (action.type) {\r\n        case constants.ORDER_LIST_MY_REQUEST:\r\n            return{loading:true}\r\n            \r\n            case constants.ORDER_LIST_MY_SUCCESS:\r\n                return{\r\n                    loading:false,\r\n                    orders:action.payload\r\n                }\r\n                case constants.ORDER_LIST_MY_FAIL:\r\n                    return{\r\n                        loading:false,\r\n                        error:action.payload\r\n                    }\r\n                    case constants.ORDER_LIST_MY_RESET:\r\n                        return{orders:[]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getOrdersReducer = (state={orders:[]},action)=>{\r\n    switch (action.type) {\r\n        case constants.GET_ORDERS_REQUEST:\r\n            return{loading:true}\r\n            \r\n            case constants.GET_ORDERS_SUCCESS:\r\n                return{\r\n                    loading:false,\r\n                    orders:action.payload\r\n                }\r\n                case constants.GET_ORDERS_FAIL:\r\n                    return{\r\n                        loading:false,\r\n                        error:action.payload\r\n                    }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state={},action)=>{\r\n    switch (action.type) {\r\n        case constants.ORDER_DELIVER_REQUEST:\r\n            return{loading:true}\r\n            \r\n            case constants.ORDER_DELIVER_SUCCESS:\r\n                return{\r\n                    loading:false,\r\n                    success:true\r\n                }\r\n                case constants.ORDER_DELIVER_FAIL:\r\n                    return{\r\n                        loading:false,\r\n                        error:action.payload\r\n                    }\r\n                    case constants.ORDER_DELIVER_RESET:\r\n                        return{}      \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store'\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}